//- @pugdoc
    name: select
    options: 
        - {string} name
        - {array} items
        - {array} groups
        - {string} size
        - {bool} spring
        - {string} cut
        - {any} value
        - {bool} disabled        
        - {bool} allowEmpty
        - {string} placeholder 

- fastredRequire('css', 'template', 'var')

- empty = options.value == ''
- attributes.class = cssBemClassArr(attributes.class, {'select_spring': options.spring, 'select_size_': options.size, 'select_cut_': options.cut, 'select_empty': empty && options.allowEmpty})

mixin items(items, selectedValue)
    if varIsNumericArr(items)
        each item in items
            != templateToHtml('select__item', {data: item, selectedValue: selectedValue})
    else
        each item, value in items
            != templateToHtml('select__item', {data: {title: item, value: value}, selectedValue: selectedValue})

.select&attributes(attributes)
    select.select__control(disabled=options.disabled name=options.name)
        if options.allowEmpty
            option(value selected=empty).select__item.select__item_placeholder= options.placeholder
        if options.items
            +items(options.items, options.value)
        if options.groups
            each group in options.groups
                optgroup.select__group(label=group.title)
                    +items(group.items, options.value)

    .select__caret!= templateToHtml('font-icon', {id: 'arrow-down'})